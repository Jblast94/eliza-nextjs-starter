# Dev Stack

A streamlined development stack with MinIO storage, n8n automation, and Jupyter notebooks.

## Features

- **Storage**: MinIO S3-compatible object storage
- **Automation**: n8n workflow automation platform
- **Data Science**: Jupyter notebooks for data analysis
- **Security**: Basic authentication and SSL/TLS support
- **Networking**: Traefik for reverse proxy

## Quick Start

### Prerequisites

- Docker & Docker Compose
- Git

### Deployment

1. **Clone the repository**:

   ```bash
   git clone https://github.com/Jblast94/Dev-Stack-Clean.git
   cd Dev-Stack-Clean
   ```

2. **Configure environment**:

   ```bash
   cp .env.example .env
   # Edit .env with your settings
   ```

3. **Run the deployment**:

   ```bash
   chmod +x setup.sh
   ./setup.sh
   ```

## Service URLs

| Service | URL | Description |
|---------|-----|-------------|
| MinIO | `https://s3.${BASE_DOMAIN}` | Object Storage |
| MinIO Console | `https://s3-console.${BASE_DOMAIN}` | Storage Management |
| n8n | `https://n8n.${BASE_DOMAIN}` | Workflow Automation |
| Jupyter | `https://notebook.${BASE_DOMAIN}` | Data Science Notebooks |

## Configuration

### Environment Variables

Required variables in `.env`:
- `BASE_DOMAIN`: Your base domain for services
- `DEFAULT_PASSWORD`: Password for service authentication
- `N8N_DOMAIN`: Domain for n8n service

### Default Credentials

All services use these credentials by default:
- **Username**: jblast
- **Password**: Set in .env as DEFAULT_PASSWORD

## Maintenance

### Updates

```bash
# Pull latest images
docker compose pull

# Restart services
docker compose up -d
```

### Logs

```bash
# View all logs
docker compose logs -f

# View specific service logs
docker compose logs -f [service-name]
```

## Structure

- `docker-compose.yml` - Main services configuration
- `docker-compose.dev.yml` - Development services
- `setup.sh` - Deployment script
- `.env` - Environment configuration

## Contributing

1. Fork the repository
2. Create your feature branch
3. Commit your changes
4. Push to the branch
5. Create a Pull Request

## License

MIT License - see LICENSE file for details.
